{
    "Version": "2012-10-17", 
      "Statement": [
        {
          "Sid": "Regional",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
              "tag:Get*",
              "sqs:SendMessage",
              "s3:ListAllMyBuckets",
              "logs:FilterLogEvents",
              "logs:Describe*",
              "kms:List*",
              "kms:Describe*",
              "imagebuilder:List*",
              "imagebuilder:Get*",
              "ec2:Describe*",
              "codepipeline:ListPipelines",
              "codecommit:List*",
              "codebuild:List*",
              "codebuild:BatchGet*",
              "cloudwatch:Describe*",
              "acm:List*",
              "acm:Describe*"
          ],
          "Condition": {
            "StringEquals": {
              "aws:RequestedRegion": "eu-west-2"
            }
          }
        },
        {
          "Sid": "EC2Premissions",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
              "ec2:TerminateInstances",
              "ec2:StopInstances",
              "ec2:StartInstances",
              "ec2:RebootInstances"
          ],
          "Condition": {
            "StringEquals": {
              "ec2:ResourceTag/owner": "$${aws:username}"
            }
          }
        },
        {
          "Sid": "CloudwatchLogsPermissions",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
              "logs:List*",
              "logs:Get*"
          ]
        },
        {
          "Sid": "S3RepoPermissions",
          "Effect": "Allow",
          "Resource": [
              "arn:aws:s3:::slc-daas-repos/*",
              "arn:aws:s3:::slc-daas-repos"
          ],
          "Action": [
              "s3:PutObject",
              "s3:List*",
              "s3:Get*"
          ]
        },
        {
          "Sid": "Global",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
              "iam:PutRolePolicy",
              "iam:PassRole"
          ]
        },
        {
          "Sid": "AllowDevsToManageTheirStuff",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
              "codecommit:GitPush",
              "codecommit:GitPull",
              "codecommit:Get*"
          ]
        },
        {
          "Sid": "AllowDevsToManageTheirCodePipelines",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
              "codepipeline:StartPipelineExecution",
              "codepipeline:List*",
              "codepipeline:Get*"
          ]
        },
        {
          "Sid": "AllowDevsToManageTheirCodeBuilds",
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
              "codebuild:List*",
              "codebuild:BatchGet*"
          ]
        },
        {
          "Sid": "DenyAccessFromAnywhereButZscaler",
          "Effect": "Deny",
          "Resource": "*",
          "NotAction": [
              "s3:PutObject",
              "s3:ListMultipartUploadParts",
              "s3:ListBucketMultipartUploads",
              "s3:ListBucket",
              "s3:GetObject",
              "s3:GetBucketLocation",
              "s3:CreateBucket",
              "s3:AbortMultipartUpload"
          ],
          "Condition": {
            "NotIpAddress": {
              "aws:SourceIp": ${jsonencode(zscaler_ips)}
            },
            "StringNotEquals": {
              "aws:SourceVpce": "vpce-08fe1c641bcd04ef2"
          }
          }
        }
      ]
    }